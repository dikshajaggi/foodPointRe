-> theme light/dark tailwind setup
-> responsive tailwind setup
-> routes setup
-> cart functionality setup (redux)
-> theme functionality setup (context)
-> api setup (baseurl and auth header token setup)
-> start with mobile-first approach


https://medium.com/rutgers-creative-x/understanding-color-for-ui-design-ec53719e880e

--------------------------------------------------------üíªUI DETAILS-----------------------------------------------------------------------------
orange -> rgb(255, 82, 0)
green -> rgb(27, 166, 114)

font (discover restaurants) -> rgba(2, 6, 12, 0.92) font-size: 24px; font-weight: 600; font-family: Gilroy

‚ô¶Ô∏èfont rest card -> rgba(2, 6, 12, 0.6); font-family: Gilroy; font-weight: 200; font-size: 13px;

üü©green box with offers -> font-family: Gilroy; font-weight: 600; font-size: 14px; color: white; border-radius: 8px;

‚ö†Ô∏èred alert -> #fa4a5b ; color: #fff; font-weight: 400; font-size: 14px; border-radius: 0px;

üçΩÔ∏èrest card -> 
    border-radius: 16px;
    height: fit-content;
    filter: drop-shadow(rgba(27, 30, 36, 0.08) 0px 0px 7.905px);
    border: 1px solid rgba(2, 6, 12, 0.08);

    rest name ->
    font-weight: 800;
    font-size: 20px;

    rating ->
    font-weight: 400;
    font-size: 16px;

üñºÔ∏ècarousel scroll arrow bg -> arrow height & width -> 16px
    border-radius: 100%;
    height: 34px;
    padding: 8px 8px 4px;
    background: rgba(2, 6, 12, 0.15)

    placeholder -> color: #525252
    font-family: Gilroy;
    font-size: 18px !important;

    grey icons - #525252

    ------------------------------------------------------------------------------------------------------------------------------------------------------------

‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏èTailwind is Mobile-First by Default‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è
In Tailwind:
No prefix = Mobile style
Prefixed classes = Larger breakpoints


https://bytes.swiggy.com/media-on-swiggys-mobile-apps-e97452fceb3f

https://bytes.swiggy.com/making-swiggy-buttery-smooth-5e3a15b931bf


<img
  src={getCloudinaryUrl(image, 800, 500, 'f_auto,q_auto')}
  srcSet={`
    ${getCloudinaryUrl(image, 400, 250, 'f_auto,q_auto')} 400w,
    ${getCloudinaryUrl(image, 800, 500, 'f_auto,q_auto')} 800w,
    ${getCloudinaryUrl(image, 1200, 750, 'f_auto,q_auto')} 1200w
  `}
  sizes="(max-width: 768px) 400px, (max-width: 1024px) 800px, 1200px"
/>

<video
  controls
  width="100%"
  preload="metadata" // avoids loading full video until needed
  poster="https://res.cloudinary.com/your-cloud-name/video/upload/so_1/your-video.jpg"
>
  <source
    src="https://res.cloudinary.com/your-cloud-name/video/upload/f_auto,q_auto/your-video.mp4"
    type="video/mp4"
/>
  Your browser does not support the video tag.
</video>

NewRelic -> monitoring tool

Cloudinary = TinyPNG + much more.

